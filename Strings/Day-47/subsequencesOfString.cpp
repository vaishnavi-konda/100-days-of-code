/*
C++ program to print all the subsequences of a string.

Given a string, we have to find out all subsequences of it. 
A String is a subsequence of a given String, that is generated by deleting some character of a given string without changing its order.

Example 1: 
    Input : abc
    Output : a, b, c, ab, bc, ac, abc

Example 2:
    Input : aaa
    Output : a, aa, aaa

Example 3:
    Input : abcd
    Output : abcd abc, abd, ab, acd, ac, ad, a, bcd, bc, bd, b, cd, c, d
    
Algorithm :
1. Iterate over the entire String.
2. Iterate from the end of string in order to generate different substrings, add the subtring to the list.
3. Drop kth character from the substring obtained from above to generate different subsequence.
4. if the subsequence is not in the list then recur.
*/
#include <iostream>
#include <string>
#include <unordered_set>
using namespace std;

void subsequence(string str);

unordered_set<string> output;

int main()
{
    string str;
    cout << "Enter a string : ";
    cin >> str;

    subsequence(str);

    for (auto i : output)
    {
        cout << i << " ";
    }
}

void subsequence(string str)
{
    // Iterate over the entire string
    for (int i = 0; i < str.length(); i++)
    {
        // Iterate from the end of the string to generate substrings
        for (int j = str.length(); j > i; j--) 
        {
            string sub_str = str.substr(i, j);
            output.insert(sub_str);
 
            // Drop kth character in the substring and if its not in the set then recur
            for (int k = 1; k < sub_str.length() - 1; k++) 
            {
                string sb = sub_str;
 
                // Drop character from the string
                sb.erase(sb.begin() + k);
                subsequence(sb);
            }
        }
    }
}
